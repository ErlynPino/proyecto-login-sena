{
  "info": {
    "name": "SENA Auth Service - Pruebas Completas",
    "description": "Colección de pruebas para el servicio de autenticación del SENA",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3001",
      "type": "string"
    },
    {
      "key": "authToken",
      "value": "",
      "type": "string"
    }
  ],
  "item": [
    {
      "name": "1. Pruebas de Conectividad",
      "item": [
        {
          "name": "Ping - Verificar servicio activo",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/ping",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "ping"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Servicio responde', function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test('Respuesta contiene pong', function () {",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.mensaje).to.eql('pong');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Estado del sistema",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/status",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "status"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Estado del sistema OK', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.mensaje).to.include('activo');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "2. Pruebas de Base de Datos",
      "item": [
        {
          "name": "Estado de la base de datos",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/database/status",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "database", "status"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Base de datos conectada', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.database.connected).to.be.true;",
                  "    pm.expect(response.database.status).to.eql('CONECTADO');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Chequeo de salud completo",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/health",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "health"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Sistema saludable', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.status).to.be.oneOf(['SALUDABLE', 'DEGRADADO']);",
                  "    pm.expect(response.services.database.canRead).to.be.true;",
                  "    pm.expect(response.services.database.canWrite).to.be.true;",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Estadísticas del sistema",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/stats",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "stats"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Estadísticas disponibles', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.statistics).to.have.property('totalUsers');",
                  "    pm.expect(response.statistics.totalUsers).to.be.a('number');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "3. Pruebas de Registro",
      "item": [
        {
          "name": "Registro exitoso",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"usuario\": \"usuario_prueba_{{$timestamp}}\",\n  \"contrasena\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Registro exitoso', function () {",
                  "    pm.response.to.have.status(201);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.mensaje).to.include('exitosamente');",
                  "    pm.expect(response.usuario).to.have.property('id');",
                  "    pm.expect(response.usuario).to.not.have.property('contrasena');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Registro con datos inválidos",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"usuario\": \"ab\",\n  \"contrasena\": \"123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Validación de datos', function () {",
                  "    pm.response.to.have.status(400);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "4. Pruebas de Login",
      "item": [
        {
          "name": "Login exitoso",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"usuario\": \"usuarioprueba\",\n  \"contrasena\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login exitoso', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.mensaje).to.include('satisfactoria');",
                  "    pm.expect(response).to.have.property('access_token');",
                  "    ",
                  "    // Guardar token para usar en otras pruebas",
                  "    pm.collectionVariables.set('authToken', response.access_token);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login con credenciales incorrectas",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"usuario\": \"usuarioincorrecto\",\n  \"contrasena\": \"passwordincorrecto\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Login fallido', function () {",
                  "    pm.response.to.have.status(401);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response.message).to.include('Error en la autenticación');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    },
    {
      "name": "5. Pruebas de Consulta",
      "item": [
        {
          "name": "Listar usuarios",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/auth/users",
              "host": ["{{baseUrl}}"],
              "path": ["auth", "users"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test('Lista de usuarios', function () {",
                  "    pm.response.to.have.status(200);",
                  "    const response = pm.response.json();",
                  "    pm.expect(response).to.have.property('usuarios');",
                  "    pm.expect(response.usuarios).to.be.an('array');",
                  "    pm.expect(response).to.have.property('total');",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
